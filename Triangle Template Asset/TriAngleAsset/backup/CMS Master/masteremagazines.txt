	<!-- Modal template -->
	<script type="text/ng-template" id="myModalContent.html">
        <div class="modal-header">
            <h3 class="modal-title" id="modal-title">{{showCase.items.title}}</h3>
        </div>
        <div class="modal-body" id="modal-body" >
        	<table id="browseLookup" datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="table table-striped table-bordered form-table nowrap" style="width:100%!important">
		    <thead>
		    	<th>Id</th>
				<th>Banner Image</th>
				<th>Description</th>
			  </thead>
		        <tbody>
		        <tr ng-repeat="person in showCase.items.persons" ng-click="showCase.someClickHandler(person)">
		        <td>{{person.ID}}</td>
		        <td><img src="{{baseurl + person.ServerRelativeUrl}}" class="img-responsive"></td>
		        <td style="word-wrap:break-word">{{person.Name}}</td>
		        </tbody>
		    </table>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" type="button" ng-click="showCase.ok()" style="float:left">Close</button>
        </div>
    </script>
	<!-- Modal template -->
	
	<!-- Controller Template -->
	<div ng-controller="masteremagazineCtrl as showCase">
		<!-- tableForm Template -->
		<div id="tableForm" ng-show="hideForm" >
			<a class="btn btn-success btn-md" ng-click="addNew()"><span class="fa fa-plus"></span> Add New</a>
			<span style="color: #505050; font-style: italic; font-size: 12px; float: right">Tip: Hold SHIFT + click for multiple sorting</span>
		    <table datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="col-sm-12 table table-striped table-bordered form-table">
		    	<thead>
			    	<th class="column-datatable">Id</th>
				    <th class="column-datatable">Title</th>
				    <th class="column-datatable">Publish Date</th>
				    <th class="column-datatable">Content</th>
					<th class="column-datatable">Thumbnails</th>
					<th class="column-datatable">Download URL</th>
					<th class="column-datatable">Status</th>
				    <th class="column-datatable">Actions</th>
			  	</thead>
		        <tbody>
		        	<tr ng-repeat="field in showCase.tables">
				        <td class="column-datatable">{{field.ID}}</td>
				        <td class="column-datatable">{{field.Title}}</td>
				        <td class="column-datatable">{{field.PublishDate | date:'mediumDate'}}</td>
				        <td class="column-datatable">
				        	<div ng-bind-html="field.Content | limitTo: 100"></div>
				        </td>
				        <td class="column-datatable"><img ng-src="{{field.Thumbnails.Url}}" class="img-responsive"></td>
				        <td class="column-datatable"><a><i>Download here</i></a></td>
				        <td class="column-datatable">
				        	<div ng-switch="field.OData__ModerationStatus">
								  <div ng-switch-when="0">
								    <p>Approved</p>
								  </div>
								  <div ng-switch-when="1">
								    <p>Rejected</p>
								  </div>
								  <div ng-switch-when="2">
								    <p>Pending</p>
								  </div>
								  <div ng-switch-default>
								    <p>Draft</p>
								  </div>
								</div>
				        	</td>
				        <td class="column-datatable">
							<div class="col-sm-4 no-padding">
								<a ng-click="edit(field)"><span class="btn btn-warning btn-sm fa fa-edit"></span></a>
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="delete(field)"><span class="btn btn-danger btn-sm fa fa-trash-o"></span></a>  
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="approve(field)"><span class="btn btn-success btn-sm fa fa-check"></span></a>
							</div>
			            </td>
		        	</tr>
		        </tbody>
		    </table>
		</div>
		<!-- tableForm Template -->
		
		<!-- Form Input -->
		<div id="addForm" ng-show="!hideForm">
			<table class="col-sm-12 form-table">
				<div class="col-md-12">
					<div class="panel-heading col-md-12 no-padding">
						<a ng-click="collapse()"><span class="pull-right clickable"><i id='panel-header' class="fa fa-minus"></i></span></a>
						<hr class="hr-thick">
					</div>
					<div class="panel-bodies">
						<div class='form-horizontal'>
							<div class="form-group">
						        <label for="Title" class="control-label col-xs-2">Title</label>
						        <div class="col-xs-10">
						        	<input type="hidden" ng-model="data.ID" name="ID" id="ID" >
						            <input type="text" ng-model="data.Title" class="form-control" id="Title" placeholder="Title" ng-required="required">
						            <span class="ms-metadata">Wording for Menu to be displayed</span>
						        </div>
						    </div>
						    <div class="form-group">
						    	<label for="startDate" class="control-label col-xs-2">Start Date</label>
						    	<div class="col-md-10">
									<div class="input-group">
							          <input type="text" icon-prefix="fa" class="form-control" uib-datepicker-popup="{{format}}" 
							          	ng-model="data.PublishDate" is-open="datepickers.Created" min-date="minDate" max-date="'2215-06-22'" 
							          	datepicker-options="dateOptions" date-disabled="disabled(date, mode)" ng-required="true" close-text="Close" show-button-bar="false"/>
							          <span class="input-group-btn">
						                <button type="button" class="btn btn-primary" ng-click="openDate($event,'Created')"><i class="fa fa-calendar"></i></button>
						              </span>
							        </div>
							     </div>
						    </div>
						    <div class="form-group">
						        <label for="Url" class="control-label col-xs-2">Thumbnails</label>
						        <div class="col-xs-5">
						        	<input type="text" ng-model="$root.FileName" class="form-control" id="FileName" placeholder="FileName" ng-show="data.chkBanner" ng-disabled="data.chkBanner">
						            <input type="file" file-model="myFile" class="form-control" id="myFile" placeholder="FileName" ng-show="!data.chkBanner"/>
						            <span class="ms-metadata" style="color:red"><i>{{messasge}}</i></span>
						        </div>				        
						        <label for="Url" class="control-label col-xs-2"><input type="checkbox" ng-model="data.chkBanner" ng-checked="chkBanner" aria-label="Follower input"> Banner in List</label>
						        <div class="col-xs-3">
						        	<button type="button" ng-disabled="!data.chkBanner" class="btn btn-primary" ng-click="browseBannerFromList()"><i class="fa fa-search">Browse</i></button>
						        </div>
						    </div>
						    <div class="form-group">
						    	<label for="Content" class="control-label col-xs-2">Content</label>
						    	<div class="col-md-10">
							         <textarea name="Content" class="form-control" ng-model="data.Content" rows="6">
							         </textarea>
							     </div>
						    </div>
						    <div class="form-group">
						        <label for="Url" class="control-label col-xs-2">File e-magazine</label>
						        <div class="col-xs-10">
							        <div class="input-group">
							        	<div class="col-xs-10 no-padding">
							        		<input type="text" ng-model="$root.FileDownload" class="form-control" id="myFileDownload" placeholder="File Download" readonly/>
							        	</div>
							        	<div class="col-xs-2">
							        		<input type="file" class="form-control" ng-disabled="isEdit" style="width:200px;border: white;color: white;" ng-model="$root.FileDownload" file-model="FileDownload" class="form-control" id="myFileDownload" placeholder="File Download" ng-required="!$root.FileDownload"/>
							        	</div>
							        	</div>
						            
							            <span class="ms-metadata" style="color:red"><i>{{msg}}</i></span>
							        </div>				        
							    </div>
						    <div class="form-group">
						        <div class="col-xs-offset-2 col-xs-10">
						            <a class="btn btn-primary" ng-click="save()"><span class="fa fa-save"></span> Save</a>
						            <a class="btn btn-warning" ng-click="cancel()">Cancel</a>
						        </div>
						    </div>
						</div>
					</div>
				</div>
			</table>
		</div>
	</div >	
<script>
angular.module('globalApp')
.directive('fileModel', ['$parse', function ($parse) {
        return {
           restrict: 'A',
           link: function(scope, element, attrs) {
              var model = $parse(attrs.fileModel);
              var modelSetter = model.assign;
              
              element.bind('change', function() {
                 scope.$apply(function() {
                    modelSetter(scope, element[0].files[0]);
                 });
              });
           }
        };
     }])
.controller('masteremagazineCtrl', masteremagazineCtrl)
.controller('ModalInstanceCtrl', ModalInstanceCtrl);
	
function masteremagazineCtrl($scope, $rootScope, $resource, $compile, $http, $q, $anchorScroll, $location, $uibModal, $log, $document, DTOptionsBuilder, DTColumnDefBuilder) {
	$scope.baseurl = window.location.origin;
	$scope.baseurl_slash = window.location.origin + "/";
	$scope.baseurl_en = _spPageContextInfo.webAbsoluteUrl;
	
	var vm = this;
	var $ctrl = this;
	
	$scope.xRequestDigest;
	vm.tables = [];
	vm.dtInstance = {};
	$scope.data =[];
	$scope.isEdit = false;
	$scope.messasge = "Tipe file image: *.png, *.jpg, *.jpeg";
	$scope.msg = "Tipe file *.pdf";
	$rootScope.FileName="";
	$scope.hideForm = true;
	$scope.animationsEnabled = true;
	
	$scope.datepickers = {
		Created: false
	};

	$scope.dateOptions = {
	    formatYear: 'yy',
	    startingDay: 1,
	    showWeeks: false
	 };
		  
	$scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
	$scope.format = $scope.formats[0];
	
	$.ajax({
        url: _spPageContextInfo.webAbsoluteUrl + "/_api/contextinfo",
        type: "POST",
        headers: {
            "Accept": "application/json;odata=verbose",
        },
        success: function (data) {
            $scope.xRequestDigest = data.d.GetContextWebInformation.FormDigestValue;
        },
        error: function (data) {
            console.log('error xRequestDigest', data);
        }
    });

	$scope.collapse = function(x) {
		if(!$('#panel-header').hasClass('fa-plus')) {
			$('.panel-bodies').slideUp();
			$('#panel-header').removeClass('fa-minus').addClass('fa-plus');
		} else {
			$('.panel-bodies').slideDown();
			$('#panel-header').removeClass('fa-plus').addClass('fa-minus');
		}		
	}
	
	$scope.openDate = function($event, x) {
	    $event.preventDefault();
	    $event.stopPropagation();
		$scope.datepickers['Created'] = true;
	};

	$scope.addNew= function() {
		$scope.data =[];
		$scope.isEdit = false;
		$('#myFile').val('');
		$('#myFileDownload').val('');
		$scope.hideForm = false;
		$scope.data.Created = new Date();	
	}
	    
    $scope.cancel= function() {
    	$scope.messasge = "Tipe file image: *.png, *.jpg, *.jpeg";
		$scope.msg = "Tipe file *.pdf";
		$scope.hideForm = true; 
	}

    $scope.edit =function(x) {
		$scope.hideForm = false;
		$scope.data = x;
		$scope.isEdit = true;
		$scope.messasge="";
		var data = x.Thumbnails.Description.split('/');
		$rootScope.FileName = data[data.length - 1];
		$scope.data.chkBanner = true;
		$scope.data.Created = new Date(x.Created);
		$scope.msg ="";
		$resource(_spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('e-Magazines%20Library')/RootFolder/files?", {}, {
		    get: {
		        method: 'GET',
		        headers: { "accept": "application/json;odata=verbose" }
		    }
		 }).get().$promise.then(function(res) {							 			
	 			var mydata = res.d.results;			 			
				for(var j=0; j < mydata.length;j++){
					if(mydata[j].Title == x.Title ){
						var data = (mydata[j].ServerRelativeUrl).split('/');
						 $rootScope.FileDownload = data[data.length - 1];						 
						 return;
					}
				}		 
	 	 });   
    }
 	    	
	vm.dtOptions = DTOptionsBuilder
		.newOptions()
		.withPaginationType('full_numbers')
		.withDisplayLength(2)
		.withBootstrap()
		.withOption('responsive', true)
		
	vm.dtOptions = {
		bLengthChange: false,
		pageLength : 5,
		lengthMenu: [[5, -1], [5]],
		order : [[0, 'desc']]
	};
	
	vm.dtColumnDefs = [
		DTColumnDefBuilder.newColumnDef(0).notVisible(),
		DTColumnDefBuilder.newColumnDef(1),
		DTColumnDefBuilder.newColumnDef(2),
		DTColumnDefBuilder.newColumnDef(3),
		DTColumnDefBuilder.newColumnDef(4),
		DTColumnDefBuilder.newColumnDef(5).notVisible(),
		DTColumnDefBuilder.newColumnDef(6)
	];
	
    $scope.reloadTable = function(){
    	$resource( _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('e-Magazines%20Library')/Items", {}, {
			    get: {
			        method: 'GET',
			        headers: { "accept": "application/json;odata=verbose" }
			    }
			 }).get().$promise.then(function(response) {
        		vm.tables = response.d.results;
    		});
    }
	$scope.reloadTable();
	
	$scope.save = function(approve) {
		var file = $scope.myFile;
		var fileDoc = $scope.FileDownload;
		var nameImage = "$rootScope.FileName";
		
	
      	var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('e-Magazines%20Library')/Items";
      	var hdr = {
      		headers:{ 
	                "Content-type": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	               }
	           };
	     
	      if(!approve){
	      	if (file != null)
	      	{
	      		nameImage = file.name;
	      	}
	      	else
	      	{	
	      		
	      		nameImage = $rootScope.FileName;
	      	}
	      	
	      }

      	if($scope.isEdit){
      	
      		var params = JSON.stringify(
				{
	      			"__metadata" :{
	      				"type": "SP.Data.EMagazines_x0020_LibraryItem"
	      			},
					"OData__ModerationStatus": $scope.data.OData__ModerationStatus
	      			}
  				);
  			
  			if ($scope.data.ID){
		      	url += "("+$scope.data.ID+")";
		
		      	hdr = {
		      		headers:{ 
				        	"Accept": "application/json;odata=verbose",
			                "Content-type": "application/json;odata=verbose",
			                "X-HTTP-Method": "MERGE",
			                "X-RequestDigest": $scope.xRequestDigest,
			                "If-Match": "*",
			                "odata-version": ""				        
			               }
			           }
	      	}
      
      		if(!approve)
      		{	
      			if(file) $scope.upload();
      			params = JSON.stringify(
					{
		      			"__metadata" :{
		      				"type": "SP.Data.EMagazines_x0020_LibraryItem"
		      			},
		      			"Title": $scope.data.Title,
		      			"PublishDate":$scope.data.PublishDate,
		      			"Content": $scope.data.Content,
						"Thumbnails": {
							"Description" : "/SiteCollectionImages/E-Magazines Collection/" + nameImage ,
							"Url": window.location.origin + "/SiteCollectionImages/E-Magazines Collection/" + nameImage						
							}
						 
		      		 })
      		}
      			      	
	      	$http.post(url, params, hdr)
		    .then(function onSuccess(response) {
		    	 if(!approve) $scope.upload();
		    	 setTimeout(function(){
				 }, 5000);
				 $scope.reloadTable();
			    if(!approve)  $scope.cancel();
			  }).catch(function onError(response) {
			    console.log(response);
			  });

      	}
      	else
      	{      		
      		
      		if(!file && $rootScope.FileName == ""){
				return alert('Please upload image!');
			}
			      
			if($scope.data.chkBanner){  
				if($rootScope.FileName =="") {
					alert('Please fill the image');
					return;
				}
			}
	      
			if(!$scope.data.chkBanner){ 
				$rootScope.FileName =""; 
			}
			

			if(file) $scope.upload();
			if(fileDoc) $scope.uploadDoc();
			
			var urlget = url + "?$filter=FileLeafRef eq '" + fileDoc.name +"'";
	      		 
	      	$.ajax({
					url: urlget,
					type: "GET",
					headers: {
						"accept": "application/json;odata=verbose"
					},
			        success: function (data) {
			             hdr = {
				      		headers:{ 
						        	"Accept": "application/json;odata=verbose",
					                "Content-type": "application/json;odata=verbose",
					                "X-HTTP-Method": "MERGE",
					                "X-RequestDigest": $scope.xRequestDigest,
					                "If-Match": "*",
					                "odata-version": ""				        
					               }
					           }
					           
			             params = JSON.stringify(
							{
				      			"__metadata" :{
				      				"type": "SP.Data.EMagazines_x0020_LibraryItem"
				      			},
				      			"Title": $scope.data.Title,
				      			"Created":$scope.data.Created,
				      			"Content": $scope.data.Content,
								"Thumbnails": {
									"Description" : "/SiteCollectionImages/E-Magazines Collection/" + ($rootScope.FileName==""?  file.name : $rootScope.FileName) ,
									"Url": window.location.origin + "/SiteCollectionImages/E-Magazines Collection/" + ($rootScope.FileName==""?  file.name : $rootScope.FileName)						
									}
								 
				      		 })
                 		
                 		var id = data.d.results[0].ID;   
						if (data.d.results[0].ID){
					      	url += "("+ id +")";
					      	 $http.post(url, params, hdr)
							.then(function onSuccess(response) {
								setTimeout(function(){
								}, 200);
								$scope.reloadTable();
								$scope.cancel();
							}).catch(function onError(response) {
								console.log('error',response);							
							}); 
						} 
					        
			        },
			        error: function (data) {
			            console.log('get error', data);
			        }
	
				});
      	}
      	
     }
     
     $scope.delete = function(x) {
		if(!x.ID) return;
		var r = confirm("Do you want to delete this row?");
	    
		var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('e-Magazines%20Library')/Items("+x.ID+")";
	    var hdr = {
      		headers:{ 
	                "Accept": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	                "If-Match": "*"
	        }
	    };
		if (r == true) {
	        $http.delete(url, hdr)
		    .then(function onSuccess(response) {
			    $scope.reloadTable();
			  }).catch(function onError(response) {
			    console.log('error in delete', response);
			  });
	    } 
	}
	
	$scope.approve =function(x) {
			if(!x.ID) return;
			$scope.isEdit = true;
 			var r = confirm("Do you want to approve this content?");
 			if (r == true) {
 				$scope.data = {
	 				'Title' : x.Title,
	 				'Created' : x.Created,
	 				'Content' : x.Content,
	 				'OData__ModerationStatus' : 0,
	 				'ID' : x.ID
	 			 };
				$scope.save(true);
			}
	    }

	
	$scope.$watch('myFile', function (newValue, oldValue, scope) {
		if(!$scope.isEdit){
			if(newValue){
			    var file = newValue;
		        if(file.type =='image/jpeg' || file.type =='image/png' ){
		        
		        }else{
		        	$scope.messasge = "Wrong type File! Your image type must *.png, *.jpg, *.jpeg";
		        	return;
		        }
		        
		        if(file.size > 2000000){
		          	$scope.messasge = "Wrong size Image! your image must less than equal 2MB";
		          	return;
		        }
		        
		        $scope.messasge = "";
			}
		}	    
	});
	
	$scope.$watch('FileDownload', function (newValue, oldValue, scope) {
		if(!$scope.isEdit){
			if(newValue){
			    var file = newValue;
		         if(file.type != "application/pdf" ){
		         	$scope.msg = "Wrong type File! Your file type must pdf!";
		         	return;
		         }
		         
		         if(file.size > 200000000){
		          	$scope.msg = "Wrong size pdf! your pdf file max 200MB!";
		          	return;
		        }
		        $rootScope.FileDownload = file.name;
		        $scope.msg = "";
			}
		}
	});
    
    $scope.upload =function(x) {
		var file = $scope.myFile;
		if(!file) return;
		var hosturl = window.location.origin +"/SiteAssets/e-Magazines%20Library/";
        var hdr = {
	      		headers:{ 
		                "Accept": "application/json;odata=verbose",
		                "X-RequestDigest": $scope.xRequestDigest,
		                "content-length": file.byteLength
		               }
		           };

        var url = window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/e-Magazines Collection')/Files/add(overwrite=true, url='"+ file.name+"')?@target='"+ hosturl +"'"       
    	$http.post(url, file, hdr)
	    .then(function onSuccess(response) {
		
		}).catch(function onError(response) {
		    console.log(response);
		});
    }
    
    $scope.uploadDoc =function(x) {
		var file = $scope.FileDownload;
		if(!file) return;
		var hosturl = $scope.baseurl_en +"/eMagazines%20Library/";
        var hdr = {
	      		headers:{ 
		                "Accept": "application/json;odata=verbose",
		                "X-RequestDigest": $scope.xRequestDigest,
		                "content-length": file.byteLength
		               }
		           };
        var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/GetFolderByServerRelativeUrl('eMagazines%20Library')/Files/add(overwrite=true,url='"+ file.name+"')?@target='"+ hosturl +"'"        
    	
    	$.ajax({
				url: url,
				type: "POST",
				data: file,
				processData: false,
				async: false,
				cache:false,
				headers: {
					"accept": "application/json;odata=verbose",
					"X-RequestDigest": $scope.xRequestDigest,
					"content-length": file.byteLength
				},
		        success: function (data) {	
		             return true;        
		        },
		        error: function (data) {
		            return true;
		        },
		         complete: function(){
			    }

			});
    }

    
    $scope.item = {
	    get: function(x) {
	    
	    $scope.name="";
		$scope.eles= angular.element(x).find('p');
		[].forEach.call($scope.eles, function (ctl) {
	        $scope.name += (ctl.outerHTML).toString();
	    });
		return $scope.name;      
	    }
	  };
    
    $scope.browseBannerFromList= function(){
		$resource( window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/e-Magazines%20Collection')/Files", {}, {
		    get: {
		        method: 'GET',
		        headers: { "accept": "application/json;odata=verbose" }
		    }
		 }).get().$promise.then(function(response) {
    		$scope.openModal('Browse Banner From List', response.d.results,'lg');
		});
 	}
		
	$scope.openModal = function (title, content, size, parentSelector) {
	    var parentElem = parentSelector?angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
		  var modalInstance = $uibModal.open({
		      animation: $scope.animationsEnabled,
		      ariaLabelledBy: 'modal-title',
		      ariaDescribedBy: 'modal-body',
		      templateUrl: 'myModalContent.html',
		      controller: 'ModalInstanceCtrl',
		      controllerAs: 'showCase',
		      size: size,
		      appendTo: parentElem,
		      resolve: {
		        items: function () {
		          return {'title' : title, 'persons' : content};
		        }
		      }
	    });
	  };
}
	   
function ModalInstanceCtrl($scope, $rootScope, $uibModalInstance, items, DTOptionsBuilder, DTColumnDefBuilder) {
	var showCase = this;
	showCase.message = '';
	showCase.items = items;
	showCase.selected = {
		item: showCase.items[0]
	};
	showCase.someClickHandler = showCase.someClickHandler;
	showCase.dtOptions = DTOptionsBuilder
		.newOptions()
		.withPaginationType('full_numbers')
		.withDisplayLength(2)
		.withBootstrap()
		.withOption('responsive', true);

	showCase.dtOptions = {
		bLengthChange: false,
		pageLength : 5,
		lengthMenu: [[5, -1], [5]]
	};
	showCase.dtColumnDefs = [
		DTColumnDefBuilder.newColumnDef(0).notVisible(),
		DTColumnDefBuilder.newColumnDef(1),
		DTColumnDefBuilder.newColumnDef(2)
	];

	showCase.someClickHandler = function(info) {
		showCase.message = info.ID + ' - ' + info.Name;
		$rootScope.FileName = info.Name;
		showCase.ok();
	}

	showCase.ok = function () {
		$uibModalInstance.close(showCase.selected.item);
	};

	showCase.cancel = function () {
		$uibModalInstance.dismiss('cancel');
	};
};
</script>
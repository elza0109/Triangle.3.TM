	<!-- Modal template -->
	<script type="text/ng-template" id="myModalContent.html">
        <div class="modal-header">
            <h3 class="modal-title" id="modal-title">{{showCase.items.title}}</h3>
        </div>
        <div class="modal-body" id="modal-body" >
        	<table id="browseLookup" datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="table table-striped table-bordered form-table nowrap" style="width:100%!important">
		    <thead>
		    	<th>Id</th>
				<th>Banner Image</th>
				<th>Description</th>
			  </thead>
		        <tbody>
		        <tr ng-repeat="person in showCase.items.persons" ng-click="showCase.someClickHandler(person)">
		        <td>{{person.ID}}</td>
		        <td><img ng-src="{{person.ServerRelativeUrl}}" class="img-responsive"></td>
		        <td style="word-wrap:break-word">{{person.Name}}</td>
		        </tbody>
		    </table>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" type="button" ng-click="showCase.ok()" style="float:left">Close</button>
        </div>
    </script>
	<!-- Modal template -->
	
	<!-- Controller Template -->
	<div ng-controller="masternewsgalleryCtrl as showCase">
		<!-- tableForm Template -->
		<div id="tableForm" ng-show="hideForm" >
			<a class="btn btn-success btn-md" ng-click="addNew()"><span class="fa fa-plus"></span> Add New</a>
			<span style="color: #505050; font-style: italic; font-size: 12px; float: right">Tip: Hold SHIFT + click for multiple sorting</span>
		    <table datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="col-sm-12 table table-striped table-bordered form-table">
		    	<thead>
			    	<th class="column-datatable">Id</th>
				    <th class="column-datatable">Title</th>
				    <th class="column-datatable">Division</th>
				    <th class="column-datatable">Publish Date</th>
				    <th class="column-datatable">Content</th>
					<th class="column-datatable">Thumbnails</th>
					<th class="column-datatable">External Link</th>
					<th class="column-datatable">Status</th>
				    <th class="column-datatable">Actions</th>
			  	</thead>
		        <tbody>
		        	<tr ng-repeat="field in showCase.tables">
				        <td class="column-datatable">{{field.ID}}</td>
				        <td class="column-datatable">{{field.Title}}</td>
				        <td class="column-datatable">{{field.Division}}</td>
				        <td class="column-datatable">{{field.PublishingDate | date:'mediumDate'}}</td>
				        <td class="column-datatable-left">
				        	<div ng-bind-html="field.Content"></div>
				        </td>
				        <td class="column-datatable"><img ng-src="{{field.Thumbnails.Url}}" class="img-responsive"></td>
				        <td class="column-datatable">{{field.ExternalLink}}</td>
				        <td class="column-datatable">
				        	<div ng-switch="field.OData__ModerationStatus">
								  <div ng-switch-when="0">
								    <p>Approved</p>
								  </div>
								  <div ng-switch-when="1">
								    <p>Rejected</p>
								  </div>
								  <div ng-switch-when="2">
								    <p>Pending</p>
								  </div>
								  <div ng-switch-default>
								    <p>Draft</p>
								  </div>
								</div>
				        	</td>
				        <td class="column-datatable">
							<div class="col-sm-4 no-padding">
								<a ng-click="edit(field)"><span class="btn btn-warning btn-sm fa fa-edit"></span></a>
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="delete(field)"><span class="btn btn-danger btn-sm fa fa-trash-o"></span></a>  
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="approve(field)"><span class="btn btn-success btn-sm fa fa-check"></span></a>
							</div>
			            </td>
		        	</tr>
		        </tbody>
		    </table>
		</div>
		<!-- tableForm Template -->
		
		<!-- Form Input -->
		<div id="addForm" ng-show="!hideForm">
			<table class="col-sm-12 form-table">
				<div class="col-md-12">
					<div class="panel-heading col-md-12 no-padding">
						<a ng-click="collapse()"><span class="pull-right clickable"><i id='panel-header' class="fa fa-minus"></i></span></a>
						<hr class="hr-thick">
					</div>
					<div class="panel-bodies">
						<div class='form-horizontal'>
							<div class="form-group">
						        <label for="Title" class="control-label col-xs-2">Title</label>
						        <div class="col-xs-10">
						        	<input type="hidden" ng-model="data.ID" name="ID" id="ID" >
						            <input type="text" ng-model="data.Title" class="form-control" id="Title" placeholder="Title" ng-required="required">
						            <span class="ms-metadata">Wording for Menu to be displayed</span>
						        </div>
						    </div>
						    <div class="form-group">
						        <label for="Division" class="control-label col-xs-2">Division</label>
						        <div class="col-xs-10">
						            <select ng-model="data.Division" class="form-control">
					                    <option value=""> -- Select One -- </option>
					                    <option ng-repeat="Division in Divisions" value="{{Division.Title}}">{{Division.Title}}</option>
					                </select>						        
				                </div>
						    </div>

						    <div class="form-group">
						    	<label for="startDate" class="control-label col-xs-2">Publishing Date</label>
						    	<div class="col-md-10">
									<div class="input-group">
							          <input type="text" icon-prefix="fa" class="form-control" uib-datepicker-popup="{{format}}" 
							          	ng-model="data.PublishingDate" is-open="datepickers.Created" min-date="minDate" max-date="'2215-06-22'" 
							          	datepicker-options="dateOptions" date-disabled="disabled(date, mode)" ng-required="true" close-text="Close" show-button-bar="false"/>
							          <span class="input-group-btn">
						                <button type="button" class="btn btn-primary" ng-click="openDate($event,'Created')"><i class="fa fa-calendar"></i></button>
						              </span>
							        </div>
							     </div>
						    </div>
						    <div class="form-group">
						        <label for="Url" class="control-label col-xs-2">Thumbnails</label>
						        <div class="col-xs-5">
						        	<input type="text" ng-model="$root.FileName" class="form-control" id="FileName" placeholder="FileName" ng-show="data.chkBanner" ng-disabled="data.chkBanner">
						            <input type="file" file-model="myFile" class="form-control" id="myFile" placeholder="FileName" ng-show="!data.chkBanner"/>
						            <span class="ms-metadata" style="color:red"><i>{{messasge}}</i></span>
						        </div>				        
						        <label for="Url" class="control-label col-xs-2"><input type="checkbox" ng-model="data.chkBanner" ng-checked="chkBanner" aria-label="Follower input"> Banner in List</label>
						        <div class="col-xs-3">
						        	<button type="button" ng-disabled="!data.chkBanner" class="btn btn-primary" ng-click="browseBannerFromList()"><i class="fa fa-search">Browse</i></button>
						        </div>
						    </div>
							<div class="form-group">
								<label for="Url" class="control-label col-xs-2">Type</label>
								<div class="col-xs-10">
									<div class="radio">
									  <label><input type="radio" name="optradio" id="optradio" value="News">News</label>
									</div>
									<div class="radio">
									  <label><input type="radio" name="optradio" id="optradio" value="Gallery">Gallery</label>
									</div>
								</div>
							</div>
						    <div class="form-group desc" id='News'>
						    	<label for="Content" class="control-label col-xs-2">Content</label>
						    	<div class="col-md-10">
							         <div text-angular="text-angular" name="htmlcontent" ng-model="data.Content" ta-disabled='disabled' 
							         	ta-toolbar-button-class="btn btn-default btn-xs"
							         	<!--ta-toolbar="[]"-->
							         	ta-text-editor-class="form-control myform1-height" 
        								ta-html-editor-class="form-control myform1-height"
        								ta-unsafe-sanitizer="true"
							         >
							         </div>
							     </div>
						    </div>
						    <div class="form-group desc" id="Gallery">
						    	<label for="Multiple" class="control-label col-xs-2">Multiple Images</label>
						    	<div class="col-md-10">
						    	<input type="file" ng-file-model="files" multiple id="multiples"/>
						    	<span class="ms-metadata" style="color:red"><i>{{msg}}</i></span>
							    	<p ng-repeat="file in files">
							    		<a type="button" class="btn btn-danger btn-xs" ng-click="removeImage($index)">×</a>
										- {{file.name}} 
										</p>
							    </div>
						    </div>
						    <div class="form-group">
						        <div class="col-xs-offset-2 col-xs-10">
						            <a class="btn btn-primary" ng-click="save(false)"><span class="fa fa-save"></span> Save</a>
						            <a class="btn btn-warning" ng-click="cancel()">Cancel</a>
						        </div>
						    </div>
						</div>
					</div>
				</div>
			</table>
		</div>
	</div >	

<script>
$("div.desc").hide();
$(document).ready(function() {
    $("input[name$='optradio']").click(function() {
        var type = $(this).val();
        $("div.desc").hide();
        $("#" + type).show();
    });
});

angular.module('globalApp')
.controller('masternewsgalleryCtrl', masternewsgalleryCtrl)
.controller('ModalInstanceCtrl', ModalInstanceCtrl)
.filter('mySort', function() {
    return function(input) {
    	String.prototype.replaceAll = function(search, replacement) {
		    var target = this;
		    return target.replace(new RegExp(search, 'g'), replacement);
		};
      return input.replaceAll("&#58;",":");
    }
  })
.directive('fileModel', ['$parse', function ($parse) {
        return {
           restrict: 'A',
           link: function(scope, element, attrs) {
              var model = $parse(attrs.fileModel);
              var modelSetter = model.assign;
              
              element.bind('change', function() {
                 scope.$apply(function() {
                    modelSetter(scope, element[0].files[0]);
                 });
              });
           }
        };
     }]);
	
function masternewsgalleryCtrl($scope, $rootScope, $resource, $compile, $http, $q, $anchorScroll, $location, $uibModal, $log, $document, DTOptionsBuilder, DTColumnDefBuilder, taOptions) {
	$scope.baseurl = window.location.origin + "/";
	$scope.baseurl_en = _spPageContextInfo.webAbsoluteUrl;
	taOptions.toolbar = [
      ['bold', 'italics', 'underline'],
      ['justifyLeft', 'justifyCenter', 'justifyRight'],
      ['insertImage', 'wordcount', 'charcount']
  	];
  
	var vm = this;
	var $ctrl = this;
	$scope.isMultiple = false;
	$scope.xRequestDigest;
	vm.tables = [];
	vm.dtInstance = {};
	$scope.data =[];
	$scope.messasge = "";
	$scope.msg = "";
	$scope.oldfiles=[];
	
	$scope.Divisions =[];

	$rootScope.FileName="";
	$scope.hideForm = true;
	$scope.animationsEnabled = true;
	$scope.data.type = 'News';
	$scope.datepickers = {
		Created: false
	};

	$scope.dateOptions = {
	    formatYear: 'yy',
	    startingDay: 1,
	    showWeeks: false
	 };
		  
	$scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
	$scope.format = $scope.formats[0];
	
	$scope.removeImage = function(index){
	   $scope.files.splice(index,1);
	   if($scope.files.length > 0){
	   		$('#multiples').val($scope.files.length+' Files');
	   }else{
	   		$('#multiples').val('No file chosen');
	   }
	   
	};

	$.ajax({
        url: _spPageContextInfo.webAbsoluteUrl + "/_api/contextinfo",
        type: "POST",
        headers: {
            "Accept": "application/json;odata=verbose",
        },
        success: function (data) {
            $scope.xRequestDigest = data.d.GetContextWebInformation.FormDigestValue;
        },
        error: function (data) {
            console.log('error xRequestDigest', data);
        }
    });

	$scope.collapse = function(x) {
		if(!$('#panel-header').hasClass('fa-plus')) {
			$('.panel-bodies').slideUp();
			$('#panel-header').removeClass('fa-minus').addClass('fa-plus');
		} else {
			$('.panel-bodies').slideDown();
			$('#panel-header').removeClass('fa-plus').addClass('fa-minus');
		}		
	};
	
	$scope.openDate = function($event, x) {
	    $event.preventDefault();
	    $event.stopPropagation();
		$scope.datepickers['Created'] = true;
	};

	$scope.addNew= function() {
		$scope.data =[];
		$scope.files ="";
		$scope.myFile = "";
		$scope.hideForm = false;
		$scope.data.Created = new Date();	
		$("[value='News']").prop('checked',true);
		$("#Gallery").hide();
		$("#News").show();
		$("#myFile").val("");
		$("#multiples").val("");
	};
	    
    $scope.cancel= function() {
		$scope.hideForm = true; 
	};
	
	$scope.combo = function(){
		$resource(_spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/GetByTitle('Division')/Items?$orderby=Title", {}, {
					    get: {
					        method: 'GET',
					        headers: { "accept": "application/json;odata=verbose" }
					    }
					 }).get().$promise.then(function(response) {
		        		$scope.Divisions = response.d.results;
		    		});
	}
	$scope.combo();
	

    $scope.edit =function(x) {
		$scope.hideForm = false;
		$('#s4-workspace').scrollTop(0);
		$scope.data = x;
		var data = x.Thumbnails.Description.split('/');
		$rootScope.FileName = data[data.length - 1];
		$scope.data.chkBanner = true; 
		$scope.data.PublishingDate = new Date(x.PublishingDate);
		if(x.ContentType0 == "News"){
			$("[value='News']").prop('checked',true);
			$("#Gallery").hide();
		}else{
			$("[value='Gallery']").prop('checked',true);
			$("#News").hide();
			var dataimage = x.galleryurl.split(';');
			var values = [];
			for(var i=0; i < dataimage.length;i++){
				var names = dataimage[i].split('/');
				var name = names[(names.length - 1)];
				var value = {
                    name: name,
                    size: 2000000,
                    _file: names[(names.length - 1)]
                };

				values.push(value);
			}
			$scope.oldfiles = values;
			$scope.files = values;
		}
		$("#" + x.ContentType0).show();
    };
 	    	
	vm.dtOptions = DTOptionsBuilder
		.newOptions()
		.withPaginationType('full_numbers')
		.withDisplayLength(2)
		.withBootstrap()
		.withOption('responsive', true)
		
	vm.dtOptions = {
		bLengthChange: false,
		pageLength : 5,
		lengthMenu: [[5, -1], [5]],
		order : [[0, 'desc']]
	};
	
	vm.dtColumnDefs = [
		DTColumnDefBuilder.newColumnDef(0).notVisible(),
		DTColumnDefBuilder.newColumnDef(1),
		DTColumnDefBuilder.newColumnDef(2),
		DTColumnDefBuilder.newColumnDef(3),
		DTColumnDefBuilder.newColumnDef(4).notVisible(),
		DTColumnDefBuilder.newColumnDef(5),
		DTColumnDefBuilder.newColumnDef(6).notVisible(),
		DTColumnDefBuilder.newColumnDef(7)
	];
	
    $scope.reloadTable = function(){
    	$resource( _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('News and Gallery')/Items?$orderby=Created desc", {}, {
			    get: {
			        method: 'GET',
			        headers: { "accept": "application/json;odata=verbose" }
			    }
			 }).get().$promise.then(function(response) {
        		vm.tables = response.d.results;
    		});
    };
	$scope.reloadTable();
	
	$scope.save = function(approve) {
		$rootScope.isSpin =true;
		var file = $scope.myFile;
		
		if(!approve){
			if(!file && $rootScope.FileName == ""){
				return alert('Please upload image!');
			}
			      
			if($scope.data.chkBanner){  
				if($rootScope.FileName =="") {
					alert('Please fill the image');
					return;
				}
			}
	      
			if(!$scope.data.chkBanner){ 
				$rootScope.FileName =""; 
			}
		}
		
      	var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('News%20and%20Gallery')/Items";
      	var hdr = {
      		headers:{ 
	                "Content-type": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	               }
	           };
      
      	if ($scope.data.ID){
	      	url += "("+$scope.data.ID+")";
	
	      	hdr = {
	      		headers:{ 
			        	"Accept": "application/json;odata=verbose",
		                "Content-type": "application/json;odata=verbose",
		                "X-HTTP-Method": "MERGE",
		                "X-RequestDigest": $scope.xRequestDigest,
		                "If-Match": "*",
		                "odata-version": ""				        
		               }
		           }
      	}
		
      	var params = JSON.stringify(
					{
		      			"__metadata" :{
		      				"type": "SP.Data.NewsGalleryListItem"
		      			},
						"OData__ModerationStatus": $scope.data.OData__ModerationStatus
		      			}
      				);
      
      	if(!approve){
      		var content = "";
      		if($("[name='optradio']:checked").val() == "Gallery"){
      			for(var i=0; i < $scope.files.length;i++){
      				if (content == ""){
      					content = "/SiteCollectionImages/News and Gallery Collection/" + $scope.files[i].name;
      					$scope.isMultiple = $scope.oldfiles[i]==null? true : ($scope.files[i].name != $scope.oldfiles[i].name);
      				}else{
      					content += ';'+ "/SiteCollectionImages/News and Gallery Collection/" + $scope.files[i].name;
      				} 
      			} 
      		}
      		
      		
	      	params = JSON.stringify(
				{
	      			"__metadata" :{
	      				"type": "SP.Data.NewsGalleryListItem"
	      			},
	      			"Title": $scope.data.Title,
	      			"PublishingDate":$scope.data.PublishingDate,
	      			"ContentType0" : $("[name='optradio']:checked").val(),
	      			"Content": $("[name='optradio']:checked").val()== 'News'?$scope.data.Content: '',
	      			"galleryurl": $("[name='optradio']:checked").val()!= 'News'?content : null,
	      			"Division":$scope.data.Division,
					"Thumbnails": {
						"Description" : "/SiteCollectionImages/News and Gallery Collection/" + ($rootScope.FileName=="" && file?  file.name : $rootScope.FileName) ,
						"Url": window.location.origin + "/SiteCollectionImages/News and Gallery Collection/" + ($rootScope.FileName==""?  file.name : $rootScope.FileName)						
						}
	      		 })
      	}

		$http.post(url, params, hdr)
		.then(function onSuccess(response) {
			if(!approve && ($("[name='optradio']:checked").val() == 'Gallery')) $scope.upload('multiple');
			if(!approve) $scope.upload('single');
			setTimeout(function(){ $rootScope.isSpin =false; $scope.reloadTable(); 
 			}, 3000);
			if(!approve) $scope.cancel();
		}).catch(function onError(response) {
			console.log(response);
		});
     };
     
     $scope.delete = function(x) {
		if(!x.ID) return;
		var r = confirm("Do you want to delete this row?");
	    
		var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('News%20and%20Gallery')/Items("+x.ID+")";
	    var hdr = {
      		headers:{ 
	                "Accept": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	                "If-Match": "*"
	        }
	    };
		if (r == true) {
	        $http.delete(url, hdr)
		    .then(function onSuccess(response) {
			    $scope.reloadTable();
			  }).catch(function onError(response) {
			    console.log('error in delete', response);
			  });
	    } 
	};
	
	$scope.approve = function(x) {
			if(!x.ID) return;
			
 			var r = confirm("Do you want to approve this content?");
 			if (r == true) {
 				$scope.data = {
	 				'Title' : x.Title,
	 				'ContentType0' : x.ContentType0,
	 				'Content' : x.Content,
	 				'OData__ModerationStatus' : 0,
	 				'ID' : x.ID
	 			 };
				$scope.save(true);
			}
	    };
	   
	$scope.$watch('myFile', function (newValue, oldValue, scope) {
        if(newValue){
        	if(newValue.size > 2000000){
	          	$scope.messasge = "your image more than 2MB"
	          }
        } 
    });
    
    $scope.upload = function(x) {
    	if(x == "multiple" && $scope.isMultiple){
    		var files = $scope.files;
    		
    		if(!files) return;
			for(var i = 0; i < files.length;i++){
				var hosturl = window.location.origin +"/SiteAssets/News%20and%20Gallery/";
		        var hdr = {
			      		headers:{ 
				                "Accept": "application/json;odata=verbose",
				                "X-RequestDigest": $scope.xRequestDigest,
				                "content-length": files[i]._file.byteLength
				               }
				           };
		        var url = window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/News%20and%20Gallery%20Collection')/Files/add(overwrite=true, url='"+ files[i].name+"')?@target='"+ hosturl +"'"       
		    	$http.post(url, files[i]._file, hdr)
			    .then(function onSuccess(response) {

				}).catch(function onError(response) {

				});
			}
    	}else{
    	
    		var file = $scope.myFile;
			if(!file) return;
			var hosturl = window.location.origin +"/SiteAssets/News%20and%20Gallery/";
	        var hdr = {
		      		headers:{ 
			                "Accept": "application/json;odata=verbose",
			                "X-RequestDigest": $scope.xRequestDigest,
			                "content-length": file.byteLength
			               }
			           };

	        var url = window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/News%20and%20Gallery%20Collection')/Files/add(overwrite=true, url='"+ file.name+"')?@target='"+ hosturl +"'"       
	    	$http.post(url, file, hdr)
		    .then(function onSuccess(response) {

			}).catch(function onError(response) {

			});
    	}
		
    };
    
    $scope.$watch('files', function (newValue, oldValue, scope) {
    	$scope.msg ="";
    	if(newValue){
		    if(newValue.length > 7){
		    	$scope.files =[];
		    	$scope.msg= 'Max 7 Files';
		    	alert($scope.msg);
		    	return;
		    }	
		    
	    	for(var i=0; i < newValue.length;i++){
	    		if($scope.files[i].size > 2000000){
	    			if ($scope.msg== ""){
	    				$scope.msg= 'Rejected image '+ $scope.files[i].name;
	    			}else{
	    				$scope.msg += ', '+ $scope.files[i].name;
	    			}
	    			$scope.files.splice(i,1);
	    		}
	    		if ( (i == ($scope.files.length - 1) && $scope.msg != "")){
	    				$scope.msg += " your images more than 2MB";
	    		}
	    	}	  
    	}  
	});

    $scope.item = {
	    get: function(x) {
	    
	    $scope.name="";
		$scope.eles= angular.element(x).find('p');
		[].forEach.call($scope.eles, function (ctl) {
	        $scope.name += (ctl.outerHTML).toString();
	    });

		return $scope.name;      
		
	    }
	  };
    
    $scope.browseBannerFromList= function(){
		$resource( window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/News%20and%20Gallery%20Collection')/Files", {}, {
		    get: {
		        method: 'GET',
		        headers: { "accept": "application/json;odata=verbose" }
		    }
		 }).get().$promise.then(function(response) {
    		$scope.openModal('Browse Banner From List', response.d.results,'lg');
		});
 	}
		
	$scope.openModal = function (title, content, size, parentSelector) {
	    var parentElem = parentSelector?angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
		  var modalInstance = $uibModal.open({
		      animation: $scope.animationsEnabled,
		      ariaLabelledBy: 'modal-title',
		      ariaDescribedBy: 'modal-body',
		      templateUrl: 'myModalContent.html',
		      controller: 'ModalInstanceCtrl',
		      controllerAs: 'showCase',
		      size: size,
		      appendTo: parentElem,
		      resolve: {
		        items: function () {
		          return {'title' : title, 'persons' : content};
		        }
		      }
	    });
	  };
};
	   
function ModalInstanceCtrl($scope, $rootScope, $uibModalInstance, items, DTOptionsBuilder, DTColumnDefBuilder) {
	var showCase = this;
	showCase.message = '';
	showCase.items = items;
	showCase.selected = {
		item: showCase.items[0]
	};
	showCase.someClickHandler = showCase.someClickHandler;
	showCase.dtOptions = DTOptionsBuilder
		.newOptions()
		.withPaginationType('full_numbers')
		.withDisplayLength(2)
		.withBootstrap()
		.withOption('responsive', true);

	showCase.dtOptions = {
		bLengthChange: false,
		pageLength : 5,
		lengthMenu: [[5, -1], [5]]
	};
	showCase.dtColumnDefs = [
		DTColumnDefBuilder.newColumnDef(0).notVisible(),
		DTColumnDefBuilder.newColumnDef(1),
		DTColumnDefBuilder.newColumnDef(2)
	];

	showCase.someClickHandler = function(info) {
		showCase.message = info.ID + ' - ' + info.Name;
		$rootScope.FileName = info.Name;
		showCase.ok();
	};

	showCase.ok = function () {
		
		$uibModalInstance.close(showCase.selected.item);
	};

	showCase.cancel = function () {
		$uibModalInstance.dismiss('cancel');
	};
};
</script>

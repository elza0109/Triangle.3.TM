	<!-- Modal template -->
	<script type="text/ng-template" id="myModalContent.html">
         <div class="modal-header">
            <h3 class="modal-title" id="modal-title">{{showCase.items.title}}</h3>
        </div>
        <div class="modal-body" id="modal-body" >
        	<table id="browseLookup" datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="table table-striped table-bordered form-table nowrap" style="width:100%!important">
		    <thead>
		    	<th>order</th>
		    	<th>Id</th>
				<th>Title</th>
                <th>Submenu Content</th>
                <th>Order</th>
			  </thead>
		        <tbody>
		        <tr ng-repeat="order in showCase.items.menuList">
		        <td>{{order.OrderPosition}}</td>
		        <td>{{order.ID}}</td>
		        <td>{{order.Title}}</td>
                <td>{{order.SubmenuContent}}</td>
                <td>
                    <input type="text" class="form-control" ng-model="order.OrderPosition" />
                </td>
		        </tbody>
		    </table>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" type="button" ng-click="showCase.ok()" style="float:left">Close</button>
            <button class="btn btn-primary" type="button" ng-click="showCase.submitEdit()" style="float:left">Submit</button>
        </div>    
    </script>
	<!-- Modal template -->
	
	<!-- Controller Template -->
	<div ng-controller="internalVacancyCtrl as showCase">
		<!-- tableForm Template -->
		<div id="tableForm" ng-show="hideForm" >
			<a class="btn btn-success btn-md" ng-click="addNew()"><span class="fa fa-plus"></span> Add New</a>
			<span style="color: #505050; font-style: italic; font-size: 12px; float: right">Tip: Hold SHIFT + click for multiple sorting</span>
		    <table datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="col-sm-12 table table-striped table-bordered form-table">
		    	<thead>
			    	<th class="column-datatable">Id</th>
				    <th class="column-datatable">Title</th>
				    <th class="column-datatable">Sub menu Content</th>
				    <th class="column-datatable">Content</th>
				    <th class="column-datatable">Order Position</th>
					<th class="column-datatable">Thumbnails</th>
					<th class="column-datatable">Link</th>
					<th class="column-datatable">Status</th>
				    <th class="column-datatable">Actions</th>
			  	</thead>
		        <tbody>
		        	<tr ng-repeat="field in showCase.tables">
				        <td class="column-datatable">{{field.ID}}</td>
				        <td class="column-datatable">{{field.Title}}</td>
				        <td class="column-datatable">{{field.SubmenuContent}}</td>
				        <td class="column-datatable-left">
				        	<div ng-bind-html="field.Content"></div>
				        </td>
				        <td class="column-datatable"> <a href="#" ng-click="getListByOrder(field.SubmenuContent)">{{field.OrderPosition}}</a></td>
				        <td class="column-datatable"><img ng-src="{{field.Thumbnails.Url}}" class="img-responsive"></td>
				        <td class="column-datatable">{{field.Link}}</td>
				        <td class="column-datatable">
				        	<div ng-switch="field.OData__ModerationStatus">
								  <div ng-switch-when="0">
								    <p>Approved</p>
								  </div>
								  <div ng-switch-when="1">
								    <p>Rejected</p>
								  </div>
								  <div ng-switch-when="2">
								    <p>Pending</p>
								  </div>
								  <div ng-switch-default>
								    <p>Draft</p>
								  </div>
								</div>
				        	</td>
				        <td class="column-datatable">
							<div class="col-sm-4 no-padding">
								<a ng-click="edit(field)"><span class="btn btn-warning btn-sm fa fa-edit"></span></a>
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="delete(field)"><span class="btn btn-danger btn-sm fa fa-trash-o"></span></a>  
							</div>
							<div class="col-sm-4 no-padding">
								<a ng-click="approve(field)"><span class="btn btn-success btn-sm fa fa-check"></span></a>
							</div>
			            </td>
		        	</tr>
		        </tbody>
		    </table>
		</div>
		<!-- tableForm Template -->
		
		<!-- Form Input -->
		<div id="addForm" ng-show="!hideForm">
			<table class="col-sm-12 form-table">
				<div class="col-md-12">
					<div class="panel-heading col-md-12 no-padding">
						<a ng-click="collapse()"><span class="pull-right clickable"><i id='panel-header' class="fa fa-minus"></i></span></a>
						<hr class="hr-thick">
					</div>
					<div class="panel-bodies">
						<div class='form-horizontal'>
							<div class="form-group">
						        <label for="Title" class="control-label col-xs-2">Title</label>
						        <div class="col-xs-10">
						        	<input type="hidden" ng-model="data.ID" name="ID" id="ID" >
						            <input type="text" ng-model="data.Title" class="form-control" id="Title" placeholder="Title" ng-required="required">
						            <span class="ms-metadata">Wording for Menu to be displayed</span>
						        </div>
						    </div>
						    <div class="form-group">
						        <label for="Url" class="control-label col-xs-2">Thumbnails</label>
						        <div class="col-xs-5">
						        	<input type="text" ng-model="$root.FileName" class="form-control" id="FileName" placeholder="FileName" ng-show="data.chkBanner" ng-disabled="data.chkBanner">
						            <input type="file" file-model="myFile" class="form-control" id="myFile" placeholder="FileName" ng-show="!data.chkBanner"/>
						            <span class="ms-metadata" style="color:red"><i>{{messasge}}</i></span>
						        </div>				        
						        <label for="Url" class="control-label col-xs-2"><input type="checkbox" ng-model="data.chkBanner" ng-checked="chkBanner" aria-label="Follower input"> Banner in List</label>
						        <div class="col-xs-3">
						        	<button type="button" ng-disabled="!data.chkBanner" class="btn btn-primary" ng-click="browseBannerFromList()"><i class="fa fa-search">Browse</i></button>
						        </div>
						    </div>
						    <div class="form-group">
						        <label for="SubmenuContent" class="control-label col-xs-2">Sub menu Content</label>
						        <div class="col-xs-10">
						            <input type="text" ng-model="data.SubmenuContent" class="form-control" id="SubmenuContent" placeholder="Sub menu Content">
						        </div>
						    </div>
						    <div class="form-group">
						        <label for="Title" class="control-label col-xs-2">Order Position</label>
						        <div class="col-xs-10">
						            <input type="text" ng-model="data.OrderPosition" class="form-control" id="OrderPosition" placeholder="Order Position">
						            <span class="ms-metadata">Order Position for division</span>
						        </div>
						    </div>
						    <div class="form-group">
						        <label for="Link" class="control-label col-xs-2">Link</label>
						        <div class="col-xs-10">
						            <input type="text" ng-model="data.Link" class="form-control" id="Link" placeholder="Link">
						            <span class="ms-metadata">Link for division</span>
						        </div>
						    </div>

						    <div class="form-group">
						    	<label for="Content" class="control-label col-xs-2">Content</label>
						    	<div class="col-md-10">
							         <div text-angular="text-angular" name="htmlcontent" ng-model="data.Content" ta-disabled='disabled' 
							         	ta-toolbar-button-class="btn btn-default btn-xs"
							         	ta-text-editor-class="form-control myform1-height" 
        								ta-html-editor-class="form-control myform1-height"
        								ta-unsafe-sanitizer="true"
							         >
							         </div>
							     </div>
						    </div>
						    <div class="form-group">
						        <div class="col-xs-offset-2 col-xs-10">
						            <a class="btn btn-primary" ng-click="save()"><span class="fa fa-save"></span> Save</a>
						            <a class="btn btn-warning" ng-click="cancel()">Cancel</a>
						        </div>
						    </div>
						</div>
					</div>
				</div>
			</table>
		</div>
	</div >	

<script>
angular.module('globalApp')
.controller('internalVacancyCtrl', internalVacancyCtrl)
.controller('ModalInstanceCtrl', ModalInstanceCtrl)
.filter('mySort', function() {
    return function(input) {
    	String.prototype.replaceAll = function(search, replacement) {
		    var target = this;
		    return target.replace(new RegExp(search, 'g'), replacement);
		};
      return input.replaceAll("&#58;",":");
    }
  })
.directive('fileModel', ['$parse', function ($parse) {
        return {
           restrict: 'A',
           link: function(scope, element, attrs) {
              var model = $parse(attrs.fileModel);
              var modelSetter = model.assign;
              
              element.bind('change', function() {
                 scope.$apply(function() {
                    modelSetter(scope, element[0].files[0]);
                 });
              });
           }
        };
     }]);
	
function internalVacancyCtrl($scope, $rootScope, $resource, $compile, $http, $q, $anchorScroll, $location, $uibModal, $log, $document, DTOptionsBuilder, DTColumnDefBuilder) {
	$scope.baseurl = window.location.origin + "/";
	$scope.baseurl_en = _spPageContextInfo.webAbsoluteUrl;
	
	var vm = this;
	var $ctrl = this;
	
	$scope.xRequestDigest;
	vm.tables = [];
	vm.dtInstance = {};
	$scope.data =[];
	$scope.messasge = "Tipe file image: *.png, *.jpg, *.jpeg";
	$rootScope.FileName="";
	$scope.hideForm = true;
	$scope.animationsEnabled = true;
	
	$scope.datepickers = {
		Created: false
	};

	$scope.dateOptions = {
	    formatYear: 'yy',
	    startingDay: 1,
	    showWeeks: false
	 };
		  
	$scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
	$scope.format = $scope.formats[0];
	
	$.ajax({
        url: _spPageContextInfo.webAbsoluteUrl + "/_api/contextinfo",
        type: "POST",
        headers: {
            "Accept": "application/json;odata=verbose",
        },
        success: function (data) {
            $scope.xRequestDigest = data.d.GetContextWebInformation.FormDigestValue;
        },
        error: function (data) {
            console.log('error xRequestDigest', data);
        }
    });

	$scope.collapse = function(x) {
		if(!$('#panel-header').hasClass('fa-plus')) {
			$('.panel-bodies').slideUp();
			$('#panel-header').removeClass('fa-minus').addClass('fa-plus');
		} else {
			$('.panel-bodies').slideDown();
			$('#panel-header').removeClass('fa-plus').addClass('fa-minus');
		}		
	};
	
	$scope.openDate = function($event, x) {
	    $event.preventDefault();
	    $event.stopPropagation();
		$scope.datepickers['Created'] = true;
	};

	$scope.addNew= function() {
		$scope.data =[];
		$scope.myFile = null;
		$('#myFile').val('');
		$scope.hideForm = false;
		$scope.data.Created = new Date();	
	};
	    
    $scope.cancel= function() {
		$scope.hideForm = true; 
	};

    $scope.edit =function(x) {
		$scope.hideForm = false;
		$scope.data = x;
		var data = x.Thumbnails.Description.split('/');
		$rootScope.FileName = data[data.length - 1];
		$scope.data.chkBanner = true;
		$scope.data.Created = new Date(x.Created);
    };
 	    	
	vm.dtOptions = DTOptionsBuilder
		.newOptions()
		.withPaginationType('full_numbers')
		.withDisplayLength(2)
		.withBootstrap()
		.withOption('responsive', true)
		
	vm.dtOptions = {
		bLengthChange: false,
		pageLength : 3,
		lengthMenu: [[3, -1], [3]],
		order : [[0, 'desc']]
	};
	
	vm.dtColumnDefs = [
		DTColumnDefBuilder.newColumnDef(0).notVisible(),
		DTColumnDefBuilder.newColumnDef(1),
		DTColumnDefBuilder.newColumnDef(2),
		DTColumnDefBuilder.newColumnDef(3).notVisible(),
		DTColumnDefBuilder.newColumnDef(4),
		DTColumnDefBuilder.newColumnDef(5),
		DTColumnDefBuilder.newColumnDef(6),
		DTColumnDefBuilder.newColumnDef(7)
	];
	
    $scope.reloadTable = function(){
    	$resource( _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Our%20Company')/Items", {}, {
			    get: {
			        method: 'GET',
			        headers: { "accept": "application/json;odata=verbose" }
			    }
			 }).get().$promise.then(function(response) {
        		vm.tables = response.d.results;
    		});
    };
	$scope.reloadTable();
	
	$scope.save = function(approve) {
		var file = $scope.myFile;
		if(!file && $rootScope.FileName == "" && !approve){
			return alert('Please upload image!');
		}
		      
		if($scope.data.chkBanner && !approve){  
			if($rootScope.FileName =="") {
				alert('Please fill the image');
				return;
			}
		}
      
		if(!$scope.data.chkBanner){ 
			$rootScope.FileName =""; 
		}

      	var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('Our%20Company')/Items";
      	var hdr = {
      		headers:{ 
	                "Content-type": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	               }
	           };
      
      	if ($scope.data.ID){
	      	url += "("+$scope.data.ID+")";
	
	      	hdr = {
	      		headers:{ 
			        	"Accept": "application/json;odata=verbose",
		                "Content-type": "application/json;odata=verbose",
		                "X-HTTP-Method": "MERGE",
		                "X-RequestDigest": $scope.xRequestDigest,
		                "If-Match": "*",
		                "odata-version": ""				        
		               }
		           }
      	}
		
      	var params = JSON.stringify(
					{
		      			"__metadata" :{
		      				"type": "SP.Data.CMSOurCompanyListItem"
		      			},
						"OData__ModerationStatus": $scope.data.OData__ModerationStatus
		      			}
      				);
      
      	if(!approve){
	      	params = JSON.stringify(
				{
	      			"__metadata" :{
	      				"type": "SP.Data.CMSOurCompanyListItem"
	      			},
	      			"Title": $scope.data.Title,
	      			"SubmenuContent":$scope.data.SubmenuContent,
	      			"OrderPosition":$scope.data.OrderPosition,
	      			"Content": $scope.data.Content,
	      			"Link": $scope.data.Link,
					"Thumbnails": {
						"Description" : "/SiteCollectionImages/Our Company Collection/" + ($rootScope.FileName==""?  file.name : $rootScope.FileName) ,
						"Url": window.location.origin + "/SiteCollectionImages/Our Company Collection/" + ($rootScope.FileName==""?  file.name : $rootScope.FileName)						
						},
					 "OData__ModerationStatus": $scope.data.OData__ModerationStatus
	      		 })
      	}	
		
		$http.post(url, params, hdr)
		.then(function onSuccess(response) {
			if(!approve) $scope.upload();
			$scope.reloadTable();
			if(!approve) $scope.cancel();
		}).catch(function onError(response) {
			console.log(response);
		});
     };
     
     $scope.delete = function(x) {
		if(!x.ID) return;
		var r = confirm("Do you want to delete this row?");
	    
		var url = _spPageContextInfo.webAbsoluteUrl +"/_api/web/lists/getbytitle('Our%20Company')/Items("+x.ID+")";
	    var hdr = {
      		headers:{ 
	                "Accept": "application/json;odata=verbose",
	                "X-RequestDigest": $scope.xRequestDigest,
	                "If-Match": "*"
	        }
	    };
		if (r == true) {
	        $http.delete(url, hdr)
		    .then(function onSuccess(response) {
			    $scope.reloadTable();
			  }).catch(function onError(response) {
			    console.log('error in delete', response);
			  });
	    } 
	};
	
	$scope.approve =function(x) {
			if(!x.ID) return;
 			var r = confirm("Do you want to approve this content?");
 			if (r == true) {
 				$scope.data = {
	 				'OData__ModerationStatus' : 0,
	 				'ID' : x.ID
	 			 };
				$scope.save(true);
			}
	    };

	
	$scope.$watch('myFile', function (newValue, oldValue, scope) {
	    if(newValue){
		    var file = newValue;
	        if(file.type =='image/jpeg' || file.type =='image/png' ){
	        
	        }else{
	        	$scope.messasge = "Wrong type File! Your image type must *.png, *.jpg, *.jpeg";
	        	return;
	        }
	        
	        if(file.size > 2000000){
	          	$scope.messasge = "Wrong size Image! your image must less than equal 2MB";
	          	return;
	        }
	        
	        $scope.messasge = "";
		}
	});
    
    $scope.upload =function(x) {
		var file = $scope.myFile;
		if(!file) return;
		var hosturl = window.location.origin +"/SiteAssets/Our%20Company/";
        var hdr = {
	      		headers:{ 
		                "Accept": "application/json;odata=verbose",
		                "X-RequestDigest": $scope.xRequestDigest,
		                "content-length": file.byteLength
		               }
		           };
        var url = window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/Our%20Company%20Collection')/Files/add(overwrite=true, url='"+ file.name+"')?@target='"+ hosturl +"'"       
    	$http.post(url, file, hdr)
	    .then(function onSuccess(response) {
		    alert('upload succes');
		}).catch(function onError(response) {
		
		});
    };
    
    $scope.item = {
	    get: function(x) {
	    
	    $scope.name="";
		$scope.eles= angular.element(x).find('p');
		[].forEach.call($scope.eles, function (ctl) {
	        $scope.name += (ctl.outerHTML).toString();
	    });
		return $scope.name;
	    }
	  };
    
    $scope.browseBannerFromList= function(){
		$resource( window.location.origin + "/_api/web/GetFolderByServerRelativeUrl('SiteCollectionImages/Our%20Company%20Collection')/Files", {}, {
		    get: {
		        method: 'GET',
		        headers: { "accept": "application/json;odata=verbose" }
		    }
		 }).get().$promise.then(function(response) {
    		$scope.openModal('Browse Banner From List', response.d.results,'lg');
		});
 	};	  
	
	$scope.getListByOrder = function(lv) {
			$resource( _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Our Company')/Items?$filter=SubmenuContent eq '" + lv + "'", {}, {
				    get: {
				        method: 'GET',
				        headers: { "accept": "application/json;odata=verbose" }
				    }
				 }).get().$promise.then(function(response) {
	        		$scope.openModal('Edit Ordering', response.d.results,'lg');
	    		});
 		};
        
        $scope.openModal = function (title, content, size, parentSelector) {
		    var parentElem = parentSelector?angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
			  var modalInstance = $uibModal.open({
			      animation: $scope.animationsEnabled,
			      ariaLabelledBy: 'modal-title',
			      ariaDescribedBy: 'modal-body',
			      templateUrl: 'myModalContent.html',
			      controller: 'ModalInstanceCtrl',
			      controllerAs: 'showCase',
			      size: size,
			      appendTo: parentElem,
			      resolve: {
			        items: function () {
			          return {'title' : title, 'menuList' : content};
			        }
			      }
		    });
		};

};
	   
function ModalInstanceCtrl($scope, $rootScope, $q, $http, $uibModalInstance, items, DTOptionsBuilder, DTColumnDefBuilder) {
    var showCase = this;
    var vm = this;
    vm.message = '';
    showCase.items = items;
    showCase.selected = {
        item: showCase.items[0]
    };
    vm.someClickHandler = showCase.someClickHandler;
    vm.dtOptions = DTOptionsBuilder
        .newOptions()
        .withPaginationType('full_numbers')
        .withDisplayLength(2)
        .withBootstrap()
        .withOption('responsive', true);
    vm.dtOptions = {
        searching: false,
        paging: false,
        bLengthChange: false,
        lengthMenu: [[5, -1], [5]],
		order : [[0, 'asc']]
    };
    vm.dtColumnDefs = [
    	DTColumnDefBuilder.newColumnDef(0).notVisible(),
        DTColumnDefBuilder.newColumnDef(1).notVisible(),
        DTColumnDefBuilder.newColumnDef(2),
        DTColumnDefBuilder.newColumnDef(3),
        DTColumnDefBuilder.newColumnDef(4)
    ];

    showCase.someClickHandler = function (info) {
        vm.message = info.ID + ' - ' + info.Name;
        $rootScope.FileName = info.Name;
        showCase.ok();
    };

    showCase.ok = function () {
        $uibModalInstance.close(showCase.selected.item);
    };

    showCase.submitEdit = function () {
        var promiseSend = [];
        var menuList = showCase.items.menuList;
        var hdr = {
            headers: {
                "Accept": "application/json;odata=verbose",
                "Content-type": "application/json;odata=verbose",
                "X-HTTP-Method": "MERGE",
                "X-RequestDigest": $('#__REQUESTDIGEST').val(),
                "If-Match": "*",
                "odata-version": ""
            }
        };
        menuList.forEach(item => {
           var url = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Our Company')/Items(" + item.ID + ")";
           var params = JSON.stringify({
                "__metadata": {
                    "type": "SP.Data.CMSOurCompanyListItem"
                },
                "OrderPosition": item.OrderPosition
            });
            promiseSend.push($http.post(url, params, hdr));
        });
        $q.all(promiseSend).then(function onSuccess(resArr) {
            location.reload();
        }).catch(function onError(resArr) {
            console.log(resArr);
        });
    };

    showCase.cancel = function () {
        $uibModalInstance.dismiss('cancel');
    };
};
</script>

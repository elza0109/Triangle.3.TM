<div ng-controller="masterSurveyCtrl">
    <script type="text/ng-template" id="myModalContent.html">
        <div class="modal-header">
            <h3 class="modal-title" id="modal-title">{{showCase.items.title}}</h3>
        </div>
        <div class="modal-body" id="modal-body" >
            <table id="browseLookup" datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance" class="table table-striped table-bordered form-table nowrap" style="width:100%!important">
                <thead>
                    <th style="vertical-align: middle">User ID</th>
                    <th style="vertical-align: middle">Employee Name</th>
                    <th style="vertical-align: middle">Department</th>
                    <!-- th style="vertical-align: middle" ng-repeat="q in showCase.dataList[0].answers">Question {{$index + 1}}</th -->
                    <th style="vertical-align: middle" ng-repeat="q in showCase.dataList[0].answers">{{q.question}}</th>
                </thead>
                <tbody>
                    <tr ng-repeat="result in showCase.dataList">
                        <td>{{result.user}}</td>
                        <td>{{result.userName}}</td>
                        <td>{{result.department}}</td>
                        <td ng-repeat="ans in result.answers">{{ans.answer}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" type="button" ng-click="showCase.ok()">OK</button>
        </div>
    </script>

    <div ng-controller="masterSurveyCtrl as showCase">
        <div id="tableForm" ng-show="hideForm">
            <a class="btn btn-success btn-md" ng-click="addNew()"><span class="fa fa-plus"></span> Add New</a>
            <span style="color: red; font-style: italic; font-size: 12px" ng-show="activeAlert"><br /><br />
                FAILED! - Only one survey can be active at a time &emsp; 
                <a ng-click="closeWarning()">OK</a>
            </span>
            <table datatable="ng" dt-options="showCase.dtOptions" dt-column-defs="showCase.dtColumnDefs" dt-instance="showCase.dtInstance"
                class="col-sm-12 table table-striped table-bordered form-table">
                <thead>
                    <th>Id</th>
                    <th>Title</th>
                    <th>Active?</th>
                    <th>Actions</th>
                </thead>
                <tbody>
                    <tr ng-repeat="surveyItem in showCase.surveyData">
                        <td>{{surveyItem.ID}}</td>
                        <td>
                            <a href="#" ng-click="getSurveyResult(surveyItem.ID, surveyItem.Title)">{{surveyItem.Title}}</a>
                        </td>
                        <td>
                            <div class="col-xs-10">
                                <label class="switch">
                                    <input type="checkbox" ng-model="surveyItem.IsActive" ng-true-value="1" ng-false-value="0" ng-change='toggleActive(surveyItem.ID, surveyItem.IsActive)'>
                                    <span class="slider round"></span>
                                </label>
                            </div>
                        </td>
                        <td>
                            <a ng-click="edit(surveyItem)">
                                <span class="btn btn-warning btn-sm fa fa-edit"></span>
                            </a>
                            <a ng-click="delete(surveyItem)">
                                <span class="btn btn-danger btn-sm fa fa-trash-o"></span>
                            </a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div id="addForm" ng-show="!hideForm">
            <table class="col-sm-12 form-table">
                <div class="col-md-12">
                    <div class="panel-heading col-md-12 no-padding">
                        <a ng-click="collapse()"><span class="pull-right clickable"><i id='test' class="fa fa-minus"></i></span></a>
                        <hr class="hr-thick">
                    </div>
                    <div class="panel-bodies">

                        <div class='form-horizontal'>
                            <div class="form-group">
                                <label for="Title" class="control-label col-xs-2">Survey Title</label>
                                <div class="col-xs-10">
                                    <input type="hidden" ng-model="data.ID" name="ID" id="ID">
                                    <input type="text" ng-model="data.Title" class="form-control" id="Title"
                                        placeholder="Title" ng-required="required">
                                    <span class="ms-metadata">Title/Theme of the question</span>
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 3px">
                                <label for="Level" class="control-label col-xs-2">Questions</label>
                                <div class="col-xs-10">
                                    <button class="btn btn-warning" type="button" ng-click="addAnswers($index)" ng-disabled="data.parsedQuestions.length >= 7"><span class="fa fa-plus"></span> Add Question</button>
                                    <span class="ms-metadata" style="margin-left: 1%; vertical-align: baseline">Maximum 7 question(s)</span>
                                </div>
                            </div>
                            <div class="form-group" ng-repeat="item in data.parsedQuestions track by $index">
                                <label for="Level" class="control-label col-xs-2"></label>
                                <div class="col-xs-10">
                                    <div class="input-group">
                                        <input type="text" ng-model="data.parsedQuestions[$index]" class="form-control" id="Questions" placeholder="Survey Question(s)">
                                        <div class="input-group-btn">
                                            <button class="btn btn-danger" type="button" ng-click="delAnswers($index)" ng-disabled="$index === 0">Delete</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="IsActive" class="control-label col-xs-2">Active?</label>
                                <div class="col-xs-10">
                                    <label class="switch">
                                        <input type="checkbox" ng-model="data.IsActive" ng-true-value="1" ng-false-value="0">
                                        <span class="slider round"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-offset-2 col-xs-10">
                                    <a class="btn btn-primary" ng-click="save()"><span class="fa fa-save"></span> Save</a>
                                    <a class="btn btn-warning" ng-click="cancel()">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
			</table>
        </div> 
    </div>
</div>

<script>

    angular.module('globalApp')
        .controller('masterSurveyCtrl', masterSurveyCtrl)
        .controller('ModalInstanceCtrl', ModalInstanceCtrl);

    function masterSurveyCtrl($scope, $resource, $compile, $http, $q, $anchorScroll, $uibModal, $location, DTOptionsBuilder, DTColumnDefBuilder) {
        var vm = this;
        vm.surveyData = [];
        vm.dtInstance = {};
        $scope.activeAlert = false;
        $scope.hideForm = true;
        $scope.data = [];
        $scope.SiteGroups = [];
        $location.hash('top');
        $scope.xRequestDigest;
        $anchorScroll();
        vm.dtOptions = DTOptionsBuilder
			.newOptions()
			.withPaginationType('full_numbers')
			.withDisplayLength(2)
			.withBootstrap()
			.withOption('responsive', true)
		vm.dtOptions = {
			bLengthChange: false,
			pageLength: 5,
			lengthMenu: [[5, -1], [5]],
			order : [[0, 'desc']]
		};
        vm.dtColumnDefs = [
        ];

        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/contextinfo",
            type: "POST",
            headers: {
                "Accept": "application/json;odata=verbose",
            },
            success: function (data) {
                $scope.xRequestDigest = data.d.GetContextWebInformation.FormDigestValue;
            },
            error: function (data) {
                console.log(data);
            }
        });

        $scope.closeWarning = function () {
            $scope.activeAlert=false;
        };

        $scope.addNew = function () {  
            $scope.data = [];
            $scope.data.parsedQuestions = [''];
            $scope.hideForm = false;
        };

        $scope.addAnswers = function (idx) {
            $scope.data.parsedQuestions.push('');
        };

        $scope.delAnswers = function (idx) {
            $scope.data.parsedQuestions.splice(idx, 1);
        };

        $scope.cancel = function () {
            $scope.hideForm = true;
            $anchorScroll();
        };

        $scope.edit = function (x) {
            $scope.hideForm = false;
            $scope.data = x;
        };

        $scope.check = function () {
            var ansArr = $scope.data.parsedQuestions.join(";");
        };

        $scope.save = function () {
            var url = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items";
            var hdr = {
                headers: {
                    "Content-type": "application/json;odata=verbose",
                    "X-RequestDigest": $scope.xRequestDigest,
                }
            };

            if ($scope.data.ID) {
                url = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items(" + $scope.data.ID + ")";

                hdr = {
                    headers: {
                        "Accept": "application/json;odata=verbose",
                        "Content-type": "application/json;odata=verbose",
                        "X-HTTP-Method": "MERGE",
                        "X-RequestDigest": $scope.xRequestDigest,
                        "If-Match": "*",
                        "odata-version": ""
                    }
                }
            }

            var params = JSON.stringify(
                {
                    "__metadata": {
                        "type": "SP.Data.SurveyMasterQuestionListItem"
                    },
                    "Title": $scope.data.Title,
                    "Question": $scope.data.parsedQuestions.join("|"),
                    "IsActive": $scope.data.IsActive,
                })

            $http.post(url, params, hdr)
                .then(function onSuccess(response) {
                    location.reload();
                }).catch(function onError(response) {
                    console.log(response);
                });

        };

        $scope.delete = function (x) {
            if (!x.ID) return;
            var r = confirm("Do you want to delete this row?");

            var url = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items(" + x.ID + ")";
            var hdr = {
                headers: {
                    "Accept": "application/json;odata=verbose",
                    "X-RequestDigest": $scope.xRequestDigest,
                    "If-Match": "*"
                }
            };
            if (r == true) {
                $http.delete(url, hdr)
                    .then(function onSuccess(response) {
                        console.log(response);
                        location.reload();
                    }).catch(function onError(response) {
                        console.log(response);
                    });
            }
        };

        $scope.download = function (x) {
            alert('download');
        };

        $scope.init = function () {
            $resource(_spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items?$OrderBy=Modified%20desc", {}, {
                get: {
                    method: 'GET',
                    headers: { "accept": "application/json;odata=verbose" }
                }
            }).get().$promise.then(function (response) {
                vm.surveyData = response.d.results;
                vm.surveyData.forEach(item => {
                    item.parsedQuestions = (item.Question).split("|");
                })
            });
        };
        
        $scope.init();
        $resource(_spPageContextInfo.webAbsoluteUrl + "/_api/Web/SiteGroups", {}, {
            get: {
                method: 'GET',
                headers: { "accept": "application/json;odata=verbose" }
            }
        }).get().$promise.then(function (response) {
            $scope.SiteGroups = response.d.results;
        });

        $scope.collapse = function (x) {
            if (!$('#test').hasClass('fa-plus')) {
                $('.panel-bodies').slideUp();
                $('#test').removeClass('fa-minus').addClass('fa-plus');
            } else {
                $('.panel-bodies').slideDown();
                $('#test').removeClass('fa-plus').addClass('fa-minus');
            }
        };

        $scope.open = function (title, content, size, parentSelector) {
            var parentElem = parentSelector ?
                angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
            var modalInstance = $uibModal.open({
                animation: $ctrl.animationsEnabled,
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                templateUrl: 'myModalContent.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'showCase',
                size: size,
                appendTo: parentElem,
                resolve: {
                    items: function () {
                        return { 'title': title, 'content': content };
                    }
                }
            });
        };

        vm.validateActive = function (id) {
            return $q(function(resolve, reject) {
                $resource(_spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items?$filter=ID%20ne%20%27" + id + "%27%20and%20IsActive%20eq%20%271%27", {}, {
                    get: {
                        method: 'GET',
                        headers: { "accept": "application/json;odata=verbose" }
                    }
                }).get().$promise.then(function (response) {
                    if (response.d.results.length >= 1) {
                        reject('another is active');
                    } else if (response.d.results.length === 0) {
                        resolve('pass');
                    }
                });
            })
        };

        $scope.toggleActive = function (id, value) {
            var url = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Master%20Question')/Items(" + id + ")";
            var hdr = {
                headers: {
                    "Accept": "application/json;odata=verbose",
                    "Content-type": "application/json;odata=verbose",
                    "X-HTTP-Method": "MERGE",
                    "X-RequestDigest": $scope.xRequestDigest,
                    "If-Match": "*",
                    "odata-version": ""
                }
            };
            var params = JSON.stringify(
                {
                    "__metadata": {
                        "type": "SP.Data.SurveyMasterQuestionListItem"
                    },
                    'IsActive' : value,
                });
            if (value === 1) {
                var validate = vm.validateActive(id);
                validate.then(function send() {
                    $http.post(url, params, hdr)
                    .then(function onSuccess(response) {
                        $scope.init();
                    }).catch(function onError(response) {
                        console.log(response);
                    });
                }).catch(function alerting() {
                    $scope.activeAlert = true;
                    setTimeout(function() {
                        $scope.init();
                    }, 500);
                })
            } else if (value === 0) {
                $http.post(url, params, hdr)
                .then(function onSuccess(response) {
                    $scope.init();
                }).catch(function onError(response) {
                    console.log(response);
                });
            }
        };

        $scope.getSurveyResult = function(id, title) {
			$resource( _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('Survey%20Result')/Items?$filter=Title eq '" + id + "'", {}, {
				    get: {
				        method: 'GET',
				        headers: { "accept": "application/json;odata=verbose" }
				    }
				 }).get().$promise.then(function(response) {
	        		$scope.openModal('Topic: ' + title, response.d.results,'lg');
	    		});
 		};
        
        $scope.openModal = function (title, content, size, parentSelector) {
		    var parentElem = parentSelector?angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
			  var modalInstance = $uibModal.open({
			      animation: $scope.animationsEnabled,
			      ariaLabelledBy: 'modal-title',
			      ariaDescribedBy: 'modal-body',
			      templateUrl: 'myModalContent.html',
			      controller: 'ModalInstanceCtrl',
			      controllerAs: 'showCase',
			      size: size,
			      appendTo: parentElem,
			      resolve: {
			        items: function () {
			          return {'title' : title, 'resultList' : content};
			        }
			      }
		    });
		};
    };

    function ModalInstanceCtrl($scope, $rootScope, $q, $http, $uibModalInstance, items, DTOptionsBuilder, DTColumnDefBuilder) {
        var showCase = this;
        var vm = this;
        vm.message = '';
		showCase.hdr = {
			headers: { "accept": "application/json;odata=verbose" }
		};
		showCase.ready = false;
        showCase.items = items;
        showCase.selected = {
            item: showCase.items[0]
        };
        vm.dtOptions = DTOptionsBuilder
            .newOptions()
            .withPaginationType('full_numbers')
            .withDisplayLength(2)
            .withBootstrap()
            .withButtons([
	            {
                    extend: "excelHtml5",
                    filename:  "Survey Result",
                    title:"Survey Result",
                    text: "Download Result",
                    exportOptions: {
                        columns: ':visible'
                    },
                    exportData: { decodeEntities: true }
                }
            ])
            .withOption('responsive', true)
            .withOption('searching', false)
            .withOption('paging', false)
            .withOption('info', false)
            .withOption('bLengthChange', false)
            .withOption('lengthMenu', [[5, -1], [5]]);

        vm.dtcolumncefs = [
			DTColumnDefBuilder.newColumnDef(0),
            DTColumnDefBuilder.newColumnDef(1),
            DTColumnDefBuilder.newColumnDef(2),
            DTColumnDefBuilder.newColumnDef(3),
            DTColumnDefBuilder.newColumnDef(4),
			DTColumnDefBuilder.newColumnDef(5),
			DTColumnDefBuilder.newColumnDef(6),
			DTColumnDefBuilder.newColumnDef(7)
        ];
        
        
        
		showCase.dataList = [];
		showCase.answererList = [];
		showCase.items.resultList.forEach(item => {
			if (showCase.answererList.indexOf(item.AuthorId) == -1) {
				showCase.answererList.push(item.AuthorId);
			};
		});
		showCase.answererList.forEach(person => {
			var obj = {};
			var q = [];
			showCase.items.resultList.forEach(item => {
				if (item.AuthorId === person) {
					q.push({question: item.Question, answer: item.Answer})
				}
			});
			$.ajax({
				async: false,
				url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/siteUserInfoList/items(" + person + ")",
				type: "GET",
				headers: {
					"Accept": "application/json;odata=verbose",
				},
				success: function (data) {
					obj.userName = data.d.Title;
					obj.department = data.d.Department;
				},
				error: function (data) {
					console.log(data);
				}
			});
			obj.user = person;
			obj.answers = q;
			showCase.dataList.push(obj);
		});
        
        showCase.ok = function () {
            $uibModalInstance.close(showCase.selected.item);
        };

        showCase.cancel = function () {
            $uibModalInstance.dismiss('cancel');
        };
    };

</script>